#######################################################################
#######################################################################
#### Baseline model to get a null model chi square
#######################################################################
#######################################################################

#### I have selected the code from Lui et al that is a "more constrained null model" because (from pg. 18) 
#### "In the continuous indicator case, the null model for testing longitudinal 
## measurement invariance used by standard statistical packages to calculate the CFI (and other relative
## fit indices like the TLI, Tucker & Lewis, 1973) places no constraint on the mean structure or the 
## unique factor structure, and becomes an inappropriate comparison model (cf. Widaman & Thompson, 
## 2003; Wu, West, and Taylor, 2009). Supplemental Materials 5B adapt this work to the ordered-
## categorical indicator case, providing the lavaan syntax for specifying an appropriate 
## alternative null model for the test of longitudinal measurement invariance."

#### So this 5b syntax is used as basis of the below code.
#### The differences from a "normal" baseline model is that normal sets a marker variable for the factor loadings
#### and lets the means of factors at all timepoints to be estimated freely & allows lagged covariances
#### btw a factor at different timepoints


#### Below  adapted for RTC
## F1: 1, 3, 5, 7, 8, 12, 13, 15, 18, 37
## F2: 20, 23, 24, 26, 27, 28, 32, 33, 35, 38


Null.Model <- ' 
#### latent variable definitions
## Constrain all factor loadings to 0;

F1T1 =~ 0*BUMBYMQ1_PRE_r + 0*BUMBYMQ3_PRE_r + 0*BUMBYMQ5_PRE_r + 0*BUMBYMQ7_PRE_r + 0*BUMBYMQ8_PRE_r + 0*BUMBYMQ12_PRE_r + 
        0*BUMBYMQ13_PRE_r + 0*BUMBYMQ15_PRE_r + 0*BUMBYMQ18_PRE_r + 0*BUMBYMQ37_PRE_r
F2T1 =~ 0*BUMBYMQ20_PRE_r + 0*BUMBYMQ23_PRE_r + 0*BUMBYMQ24_PRE_r + 0*BUMBYMQ26_PRE_r + 0*BUMBYMQ27_PRE_r + 0*BUMBYMQ28_PRE_r + 
        0*BUMBYMQ32_PRE_r + 0*BUMBYMQ33_PRE_r + 0*BUMBYMQ35_PRE_r + 0*BUMBYMQ38_PRE_r
F1T2 =~ 0*BUMBYMQ1_POST_r + 0*BUMBYMQ3_POST_r + 0*BUMBYMQ5_POST_r + 0*BUMBYMQ7_POST_r + 0*BUMBYMQ8_POST_r + 0*BUMBYMQ12_POST_r + 
        0*BUMBYMQ13_POST_r + 0*BUMBYMQ15_POST_r + 0*BUMBYMQ18_POST_r + 0*BUMBYMQ37_POST_r
F2T2 =~ 0*BUMBYMQ20_POST_r + 0*BUMBYMQ23_POST_r + 0*BUMBYMQ24_POST_r + 0*BUMBYMQ26_POST_r + 0*BUMBYMQ27_POST_r + 0*BUMBYMQ28_POST_r + 
        0*BUMBYMQ32_POST_r + 0*BUMBYMQ33_POST_r + 0*BUMBYMQ35_POST_r + 0*BUMBYMQ38_POST_r


#### Latent common factor variances and covariances
F1T1 ~~ 1*F1T1 + 0*F1T2
F2T1 ~~ 1*F2T1 + 0*F2T2

#### Latent common factor means
## Fix common factor means to zero
F1T1 ~ 0*1
F2T1 ~ 0*1
F1T2 ~ 0*1
F2T2 ~ 0*1

#### Thresholds
BUMBYMQ1_PRE_r  | BUMBYMQ1t1*t1 + BUMBYMQ1t2*t2
BUMBYMQ1_POST_r | BUMBYMQ1t1*t1 + BUMBYMQ1t2*t2

BUMBYMQ3_PRE_r  | BUMBYMQ3t1*t1 + BUMBYMQ3t2*t2
BUMBYMQ3_POST_r | BUMBYMQ3t1*t1 + BUMBYMQ3t2*t2

BUMBYMQ5_PRE_r  | BUMBYMQ5t1*t1 + BUMBYMQ5t2*t2
BUMBYMQ5_POST_r | BUMBYMQ5t1*t1 + BUMBYMQ5t2*t2

BUMBYMQ7_PRE_r  | BUMBYMQ7t1*t1 + BUMBYMQ7t2*t2
BUMBYMQ7_POST_r | BUMBYMQ7t1*t1 + BUMBYMQ7t2*t2

BUMBYMQ8_PRE_r  | BUMBYMQ8t1*t1 + BUMBYMQ8t2*t2
BUMBYMQ8_POST_r | BUMBYMQ8t1*t1 + BUMBYMQ8t2*t2

BUMBYMQ12_PRE_r  | BUMBYMQ12t1*t1 + BUMBYMQ12t2*t2
BUMBYMQ12_POST_r | BUMBYMQ12t1*t1 + BUMBYMQ12t2*t2

BUMBYMQ13_PRE_r  | BUMBYMQ13t1*t1 + BUMBYMQ13t2*t2
BUMBYMQ13_POST_r | BUMBYMQ13t1*t1 + BUMBYMQ13t2*t2

BUMBYMQ15_PRE_r  | BUMBYMQ15t1*t1 + BUMBYMQ15t2*t2
BUMBYMQ15_POST_r | BUMBYMQ15t1*t1 + BUMBYMQ15t2*t2

BUMBYMQ18_PRE_r  | BUMBYMQ18t1*t1 + BUMBYMQ18t2*t2
BUMBYMQ18_POST_r | BUMBYMQ18t1*t1 + BUMBYMQ18t2*t2

BUMBYMQ20_PRE_r  | BUMBYMQ20t1*t1 + BUMBYMQ20t2*t2
BUMBYMQ20_POST_r | BUMBYMQ20t1*t1 + BUMBYMQ20t2*t2

BUMBYMQ23_PRE_r  | BUMBYMQ23t1*t1 + BUMBYMQ23t2*t2
BUMBYMQ23_POST_r | BUMBYMQ23t1*t1 + BUMBYMQ23t2*t2

BUMBYMQ24_PRE_r  | BUMBYMQ24t1*t1 + BUMBYMQ24t2*t2
BUMBYMQ24_POST_r | BUMBYMQ24t1*t1 + BUMBYMQ24t2*t2

BUMBYMQ26_PRE_r  | BUMBYMQ26t1*t1 + BUMBYMQ26t2*t2
BUMBYMQ26_POST_r | BUMBYMQ26t1*t1 + BUMBYMQ26t2*t2

BUMBYMQ27_PRE_r  | BUMBYMQ27t1*t1 + BUMBYMQ27t2*t2
BUMBYMQ27_POST_r | BUMBYMQ27t1*t1 + BUMBYMQ27t2*t2

BUMBYMQ28_PRE_r  | BUMBYMQ28t1*t1 + BUMBYMQ28t2*t2
BUMBYMQ28_POST_r | BUMBYMQ28t1*t1 + BUMBYMQ28t2*t2

BUMBYMQ32_PRE_r  | BUMBYMQ32t1*t1 + BUMBYMQ32t2*t2
BUMBYMQ32_POST_r | BUMBYMQ32t1*t1 + BUMBYMQ32t2*t2

BUMBYMQ33_PRE_r  | BUMBYMQ33t1*t1 + BUMBYMQ33t2*t2
BUMBYMQ33_POST_r | BUMBYMQ33t1*t1 + BUMBYMQ33t2*t2

BUMBYMQ35_PRE_r  | BUMBYMQ35t1*t1 + BUMBYMQ35t2*t2
BUMBYMQ35_POST_r | BUMBYMQ35t1*t1 + BUMBYMQ35t2*t2

BUMBYMQ37_PRE_r  | BUMBYMQ37t1*t1 + BUMBYMQ37t2*t2
BUMBYMQ37_POST_r | BUMBYMQ37t1*t1 + BUMBYMQ37t2*t2

BUMBYMQ38_PRE_r  | BUMBYMQ38t1*t1 + BUMBYMQ38t2*t2
BUMBYMQ38_POST_r | BUMBYMQ38t1*t1 + BUMBYMQ38t2*t2

#### Intercepts
## Fix all intercepts to zero
BUMBYMQ1_PRE_r + BUMBYMQ1_POST_r  ~ 0*1
BUMBYMQ3_PRE_r + BUMBYMQ3_POST_r  ~ 0*1
BUMBYMQ5_PRE_r + BUMBYMQ5_POST_r  ~ 0*1
BUMBYMQ7_PRE_r + BUMBYMQ7_POST_r  ~ 0*1
BUMBYMQ8_PRE_r + BUMBYMQ8_POST_r  ~ 0*1
BUMBYMQ12_PRE_r + BUMBYMQ12_POST_r  ~ 0*1
BUMBYMQ13_PRE_r + BUMBYMQ13_POST_r  ~ 0*1
BUMBYMQ15_PRE_r + BUMBYMQ15_POST_r  ~ 0*1
BUMBYMQ18_PRE_r + BUMBYMQ18_POST_r  ~ 0*1
BUMBYMQ20_PRE_r + BUMBYMQ20_POST_r  ~ 0*1
BUMBYMQ23_PRE_r + BUMBYMQ23_POST_r  ~ 0*1
BUMBYMQ24_PRE_r + BUMBYMQ24_POST_r  ~ 0*1
BUMBYMQ26_PRE_r + BUMBYMQ26_POST_r  ~ 0*1
BUMBYMQ27_PRE_r + BUMBYMQ27_POST_r  ~ 0*1
BUMBYMQ28_PRE_r + BUMBYMQ28_POST_r  ~ 0*1
BUMBYMQ32_PRE_r + BUMBYMQ32_POST_r  ~ 0*1
BUMBYMQ33_PRE_r + BUMBYMQ33_POST_r  ~ 0*1
BUMBYMQ35_PRE_r + BUMBYMQ35_POST_r  ~ 0*1
BUMBYMQ37_PRE_r + BUMBYMQ37_POST_r  ~ 0*1
BUMBYMQ38_PRE_r + BUMBYMQ38_POST_r  ~ 0*1

#### Unique variances
## Constrain all unique variance at all occasions to 1.00
BUMBYMQ1_PRE_r ~~ 1*BUMBYMQ1_PRE_r
BUMBYMQ1_POST_r ~~ 1*BUMBYMQ1_POST_r
BUMBYMQ3_PRE_r ~~ 1*BUMBYMQ3_PRE_r
BUMBYMQ3_POST_r ~~ 1*BUMBYMQ3_POST_r
BUMBYMQ5_PRE_r ~~ 1*BUMBYMQ5_PRE_r 
BUMBYMQ5_POST_r ~~ 1*BUMBYMQ5_POST_r
BUMBYMQ7_PRE_r ~~ 1*BUMBYMQ7_PRE_r 
BUMBYMQ7_POST_r ~~ 1*BUMBYMQ7_POST_r 
BUMBYMQ8_PRE_r ~~ 1*BUMBYMQ8_PRE_r
BUMBYMQ8_POST_r ~~ 1*BUMBYMQ8_POST_r
BUMBYMQ12_PRE_r ~~ 1*BUMBYMQ12_PRE_r 
BUMBYMQ12_POST_r ~~ 1*BUMBYMQ12_POST_r
BUMBYMQ13_PRE_r ~~ 1*BUMBYMQ13_PRE_r
BUMBYMQ13_POST_r ~~ 1*BUMBYMQ13_POST_r
BUMBYMQ15_PRE_r ~~ 1*BUMBYMQ15_PRE_r
BUMBYMQ15_POST_r ~~ 1*BUMBYMQ15_POST_r
BUMBYMQ18_PRE_r ~~ 1*BUMBYMQ18_PRE_r
BUMBYMQ18_POST_r ~~ 1*BUMBYMQ18_POST_r
BUMBYMQ20_PRE_r ~~ 1*BUMBYMQ20_PRE_r
BUMBYMQ20_POST_r ~~ 1*BUMBYMQ20_POST_r
BUMBYMQ23_PRE_r ~~ 1*BUMBYMQ23_PRE_r
BUMBYMQ23_POST_r ~~ 1*BUMBYMQ23_POST_r
BUMBYMQ24_PRE_r ~~ 1*BUMBYMQ24_PRE_r
BUMBYMQ24_POST_r ~~ 1*BUMBYMQ24_POST_r
BUMBYMQ26_PRE_r ~~ 1*BUMBYMQ26_PRE_r
BUMBYMQ26_POST_r ~~ 1*BUMBYMQ26_POST_r
BUMBYMQ27_PRE_r ~~ 1*BUMBYMQ27_PRE_r
BUMBYMQ27_POST_r ~~ 1*BUMBYMQ27_POST_r
BUMBYMQ28_PRE_r ~~ 1*BUMBYMQ28_PRE_r
BUMBYMQ28_POST_r ~~ 1*BUMBYMQ28_POST_r
BUMBYMQ32_PRE_r ~~ 1*BUMBYMQ32_PRE_r
BUMBYMQ32_POST_r ~~ 1*BUMBYMQ32_POST_r
BUMBYMQ33_PRE_r ~~ 1*BUMBYMQ33_PRE_r
BUMBYMQ33_POST_r ~~ 1*BUMBYMQ33_POST_r
BUMBYMQ35_PRE_r ~~ 1*BUMBYMQ35_PRE_r
BUMBYMQ35_POST_r ~~ 1*BUMBYMQ35_POST_r
BUMBYMQ37_PRE_r ~~ 1*BUMBYMQ37_PRE_r
BUMBYMQ37_POST_r ~~ 1*BUMBYMQ37_POST_r
BUMBYMQ38_PRE_r ~~ 1*BUMBYMQ38_PRE_r
BUMBYMQ38_POST_r ~~ 1*BUMBYMQ38_POST_r

#### No lagged unique factor covariances
BUMBYMQ1_PRE_r ~~ 0*BUMBYMQ1_POST_r
BUMBYMQ3_PRE_r ~~ 0*BUMBYMQ3_POST_r
BUMBYMQ5_PRE_r ~~ 0*BUMBYMQ5_POST_r 
BUMBYMQ7_PRE_r ~~ 0*BUMBYMQ7_POST_r 
BUMBYMQ8_PRE_r ~~ 0*BUMBYMQ8_POST_r
BUMBYMQ12_PRE_r ~~ 0*BUMBYMQ12_POST_r 
BUMBYMQ13_PRE_r ~~ 0*BUMBYMQ13_POST_r
BUMBYMQ15_PRE_r ~~ 0*BUMBYMQ15_POST_r
BUMBYMQ18_PRE_r ~~ 0*BUMBYMQ18_POST_r
BUMBYMQ20_PRE_r ~~ 0*BUMBYMQ20_POST_r
BUMBYMQ23_PRE_r ~~ 0*BUMBYMQ23_POST_r
BUMBYMQ24_PRE_r ~~ 0*BUMBYMQ24_POST_r
BUMBYMQ26_PRE_r ~~ 0*BUMBYMQ26_POST_r
BUMBYMQ27_PRE_r ~~ 0*BUMBYMQ27_POST_r
BUMBYMQ28_PRE_r ~~ 0*BUMBYMQ28_POST_r
BUMBYMQ32_PRE_r ~~ 0*BUMBYMQ32_POST_r
BUMBYMQ33_PRE_r ~~ 0*BUMBYMQ33_POST_r
BUMBYMQ35_PRE_r ~~ 0*BUMBYMQ35_POST_r
BUMBYMQ37_PRE_r ~~ 0*BUMBYMQ37_POST_r
BUMBYMQ38_PRE_r ~~ 0*BUMBYMQ38_POST_r
'

Fit.Null.Model.covar <- cfa(Null.Model, sample.cov = rtc20.covar.mbend.hj, 
                         sample.mean = rtc20.poly.mean.lavaan, sample.th = rtc20.thresholds, sample.nobs = 109,
                         WLS.V = rtc20.poly.wlsv.lavaan, NACOV = rtc20.poly.nacov.lavaan,
                         ordered=c(
                           "BUMBYMQ1_PRE_r", "BUMBYMQ1_POST_r", "BUMBYMQ3_PRE_r", "BUMBYMQ3_POST_r", 
                           "BUMBYMQ5_PRE_r", "BUMBYMQ5_POST_r", "BUMBYMQ7_PRE_r", "BUMBYMQ7_POST_r", 
                           "BUMBYMQ8_PRE_r", "BUMBYMQ8_POST_r", "BUMBYMQ12_PRE_r", "BUMBYMQ12_POST_r", 
                           "BUMBYMQ13_PRE_r", "BUMBYMQ13_POST_r", "BUMBYMQ15_PRE_r", "BUMBYMQ15_POST_r", 
                           "BUMBYMQ18_PRE_r", "BUMBYMQ18_POST_r", "BUMBYMQ20_PRE_r", "BUMBYMQ20_POST_r", 
                           "BUMBYMQ23_PRE_r", "BUMBYMQ23_POST_r", "BUMBYMQ24_PRE_r", "BUMBYMQ24_POST_r", 
                           "BUMBYMQ26_PRE_r", "BUMBYMQ26_POST_r", "BUMBYMQ27_PRE_r", "BUMBYMQ27_POST_r", 
                           "BUMBYMQ28_PRE_r", "BUMBYMQ28_POST_r", "BUMBYMQ32_PRE_r", "BUMBYMQ32_POST_r", 
                           "BUMBYMQ33_PRE_r", "BUMBYMQ33_POST_r", "BUMBYMQ35_PRE_r", "BUMBYMQ35_POST_r", 
                           "BUMBYMQ37_PRE_r", "BUMBYMQ37_POST_r", "BUMBYMQ38_PRE_r", "BUMBYMQ38_POST_r"),
                         parameterization = "theta", estimator = "WLSMV", set.seed(12345))


Warning messages:
1: In th.g[ord.idx] <- sample.th[[g]] :
  number of items to replace is not a multiple of replacement length
2: In lav_start(start.method = lavoptions$start, lavpartable = lavpartable,  ... :
  lavaan WARNING: some starting values are non-finite; replacing them with 0.5; please provide better starting values.

3: In th[th.idx > 0L] <- TAU[, 1L] :
  number of items to replace is not a multiple of replacement length
4: In diff * diff * WLS.VD :
  longer object length is not a multiple of shorter object length
5: In th[th.idx > 0L] <- TAU[, 1L] :
  number of items to replace is not a multiple of replacement length
6: In diff * diff * WLS.VD :
  longer object length is not a multiple of shorter object length
7: In th[th.idx > 0L] <- TAU[, 1L] :
  number of items to replace is not a multiple of replacement length
8: In th[th.idx > 0L] <- TAU[, 1L] :
  number of items to replace is not a multiple of replacement length
9: In diff * diff * WLS.VD :
  longer object length is not a multiple of shorter object length
10: In th[th.idx > 0L] <- TAU[, 1L] :
  number of items to replace is not a multiple of replacement length
11: In diff * diff * WLS.VD :
  longer object length is not a multiple of shorter object length
12: In th[th.idx > 0L] <- TAU[, 1L] :
  number of items to replace is not a multiple of replacement length
13: In th[th.idx > 0L] <- TAU[, 1L] :
  number of items to replace is not a multiple of replacement length
14: In diff * diff * WLS.VD :
  longer object length is not a multiple of shorter object length
15: In th[th.idx > 0L] <- TAU[, 1L] :
  number of items to replace is not a multiple of replacement length
16: In diff * diff * WLS.VD :
  longer object length is not a multiple of shorter object length
17: In th[th.idx > 0L] <- TAU[, 1L] :
  number of items to replace is not a multiple of replacement length
18: In th[th.idx > 0L] <- TAU[, 1L] :
  number of items to replace is not a multiple of replacement length
19: In diff * diff * WLS.VD :
  longer object length is not a multiple of shorter object length
20: In th[th.idx > 0L] <- TAU[, 1L] :
  number of items to replace is not a multiple of replacement length
21: In diff * diff * WLS.VD :
  longer object length is not a multiple of shorter object length
22: In th[th.idx > 0L] <- TAU[, 1L] :
  number of items to replace is not a multiple of replacement length
23: In lavaan::lavaan(model = Null.Model, data = set.seed(12345),  ... :
  lavaan WARNING:
    Model estimation FAILED! Returning starting values.
24: In th[th.idx > 0L] <- TAU[, 1L] :
  number of items to replace is not a multiple of replacement length
25: In WLS.obs - WLS.est :
  longer object length is not a multiple of shorter object length
26: In diff * diff * WLS.VD :
  longer object length is not a multiple of shorter object length
27: In WLS.obs - WLS.est :
  longer object length is not a multiple of shorter object length
28: In diff * diff * WLS.VD :
  longer object length is not a multiple of shorter object length
29: In WLS.obs - WLS.est :
  longer object length is not a multiple of shorter object length
30: In diff * diff * WLS.VD :
  longer object length is not a multiple of shorter object length
31: In WLS.obs - WLS.est :
  longer object length is not a multiple of shorter object length
32: In diff * diff * WLS.VD :
  longer object length is not a multiple of shorter object length
33: In WLS.obs - WLS.est :
  longer object length is not a multiple of shorter object length
34: In diff * diff * WLS.VD :
  longer object length is not a multiple of shorter object length
35: In WLS.obs - WLS.est :
  longer object length is not a multiple of shorter object length
36: In diff * diff * WLS.VD :
  longer object length is not a multiple of shorter object length
37: In WLS.obs - WLS.est :
  longer object length is not a multiple of shorter object length
38: In diff * diff * WLS.VD :
  longer object length is not a multiple of shorter object length
39: In WLS.obs - WLS.est :
  longer object length is not a multiple of shorter object length
40: In diff * diff * WLS.VD :
  longer object length is not a multiple of shorter object length
41: In lavaan::lavaan(model = Null.Model, data = set.seed(12345),  ... :
  lavaan WARNING: estimation of the baseline model failed.


